= Attribute Cartographer

* http://github.com/krishicks/attribute-cartographer

== DESCRIPTION

Attribute Cartographer allows you to map an attributes hash into similarly or differently named methods, using an optional lambda to map the values as well.

== INSTALL

Add attribute-cartographer to your Gemfile

  gem 'attribute-cartographer'

Then run:

  $ bundle

== USAGE
  class Mapper
    include AttributeCartographer

    # one-way mapping
    map :a
    map :b,     ->(v) { v.downcase }
    map :e, :f, ->(v) { v.downcase }

    map :O,     ->(k,v) { [k.downcase, v.downcase] }

    map [:i, :j, :k]
    map [:l, :m, :n], ->(v) { v.upcase }

    # two-way mapping
    map :c, :d
    map :g, :h, ->(v) { v.downcase }, ->(v) { v.upcase }

    map [:P, :Q, :R], ->(k,v) { [k.downcase, v.downcase] }
  end

  Mapper.new(a: 2, b: "STRING")

  For each mapping defined, an entry in mapped_attributes will be made using the
  logic defined in the mapping. You also get another method, original_attributes,
  that retains the entire hash that was passed to #initialize, whether the keys
  were mapped or not.

== REQUIREMENTS

* Ruby 1.9.x

== LICENSE

MIT
